<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kams.dao.SmCommentsMapper">
  <resultMap id="BaseResultMap" type="com.kams.bean.SmComments">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="articalId" jdbcType="INTEGER" property="articalid" />
    <result column="commentUser" jdbcType="VARCHAR" property="commentuser" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="cval1" jdbcType="VARCHAR" property="cval1" />
    <result column="cval2" jdbcType="VARCHAR" property="cval2" />
    <result column="cval3" jdbcType="VARCHAR" property="cval3" />
    <result column="update_time" jdbcType="CHAR" property="updateTime" />
    <result column="chk" jdbcType="CHAR" property="chk" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, articalId, commentUser, comment, cval1, cval2, cval3, update_time, chk
  </sql>
  <select id="selectByExample" parameterType="com.kams.bean.SmCommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sm_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.kams.bean.SmCommentsExample">
    delete from sm_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kams.bean.SmComments">
    insert into sm_comments (id, articalId, commentUser, 
      comment, cval1, cval2, 
      cval3, update_time, chk)
    values (#{id,jdbcType=INTEGER}, #{articalid,jdbcType=INTEGER}, #{commentuser,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{cval1,jdbcType=VARCHAR}, #{cval2,jdbcType=VARCHAR}, 
      #{cval3,jdbcType=VARCHAR}, #{updateTime,jdbcType=CHAR}, #{chk,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kams.bean.SmComments">
    insert into sm_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articalid != null">
        articalId,
      </if>
      <if test="commentuser != null">
        commentUser,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="cval1 != null">
        cval1,
      </if>
      <if test="cval2 != null">
        cval2,
      </if>
      <if test="cval3 != null">
        cval3,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="chk != null">
        chk,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articalid != null">
        #{articalid,jdbcType=INTEGER},
      </if>
      <if test="commentuser != null">
        #{commentuser,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="cval1 != null">
        #{cval1,jdbcType=VARCHAR},
      </if>
      <if test="cval2 != null">
        #{cval2,jdbcType=VARCHAR},
      </if>
      <if test="cval3 != null">
        #{cval3,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="chk != null">
        #{chk,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kams.bean.SmCommentsExample" resultType="java.lang.Long">
    select count(*) from sm_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sm_comments
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.articalid != null">
        articalId = #{record.articalid,jdbcType=INTEGER},
      </if>
      <if test="record.commentuser != null">
        commentUser = #{record.commentuser,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.cval1 != null">
        cval1 = #{record.cval1,jdbcType=VARCHAR},
      </if>
      <if test="record.cval2 != null">
        cval2 = #{record.cval2,jdbcType=VARCHAR},
      </if>
      <if test="record.cval3 != null">
        cval3 = #{record.cval3,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=CHAR},
      </if>
      <if test="record.chk != null">
        chk = #{record.chk,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sm_comments
    set id = #{record.id,jdbcType=INTEGER},
      articalId = #{record.articalid,jdbcType=INTEGER},
      commentUser = #{record.commentuser,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      cval1 = #{record.cval1,jdbcType=VARCHAR},
      cval2 = #{record.cval2,jdbcType=VARCHAR},
      cval3 = #{record.cval3,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=CHAR},
      chk = #{record.chk,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <insert id="deployComm"  parameterType="com.kams.bean.SmComments" >
  			insert into sm_comments values(#{articalid},#{commentuser},#{comment},#{cval1},null,null,(select CONVERT(varchar(100), GETDATE(), 120)),'0');
  			update sm_gonggao set commNum=commNum+1 where id=#{articalid};
  			update sm_useraction set chk =chk+1 where articalId=#{articalid} and reader=#{commentuser}
  </insert>
  
  <select id="getComms"  parameterType="com.kams.bean.SmComments"  resultMap="BaseResultMap">
  			select * from sm_comments
  				<where>
					<if test="articalid != null  and articalid !='' ">
       					  and articalId = #{articalid}
     			    </if>
     			    <if test="commentuser != null  and commentuser !='' ">
       					  and commentUser = #{commentuser}
     			    </if>
     			    <if test="comment != null  and comment !='' ">
       					  and comment = #{comment}
     			    </if>
     			</where>
     	   order by update_time desc		
  </select>
  
  <update id="addView" parameterType="com.kams.bean.SmUseraction" >
  			update sm_gonggao set views=views+1, update_time=(select CONVERT(varchar(100), GETDATE(), 120)) where id=#{articalId};
  			update sm_useraction set views =views+1,update_time=(select CONVERT(varchar(100), GETDATE(), 120)) where articalId=#{articalId} and reader=#{reader}
  </update>
  
  <update id="addFavo" parameterType="map">
  			update sm_gonggao set favo=favo+ #{count} where id=#{id};
  			update sm_useraction set dianz =dianz+ #{count} where articalId=#{id} and reader=#{reader}
  </update>
  
  <delete id="delComm" parameterType="int">
  			delete from sm_comments where id=#{id}
  </delete>
</mapper>